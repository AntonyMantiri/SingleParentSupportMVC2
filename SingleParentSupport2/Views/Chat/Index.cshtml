@{
    ViewData["Title"] = "Chat Support";
}

<div class="container">
    <div class="row mb-4">
        <div class="col-md-12">
            <div class="card">
                <div class="card-header bg-primary text-white d-flex justify-content-between">
                    <h5 class="mb-0">Support Groups</h5>
                    <button class="btn btn-sm btn-light" id="createGroupBtn" data-bs-toggle="modal" data-bs-target="#createGroupModal">
                        <i class="bi bi-plus-circle"></i> New Group
                    </button>
                </div>
                <div class="card-body p-0">
                    <ul class="list-group list-group-flush" id="groupsList">
                        <!-- Groups will be populated here -->
                        <li class="list-group-item text-center text-muted">
                            No groups available. Create one to get started!
                        </li>
                    </ul>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-3">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Chat Partners</h5>
                </div>
                <div class="card-body p-0">
                    <ul class="list-group list-group-flush" id="usersList">
                        @foreach (var user in ViewBag.ChatPartners)
                        {
                            <li class="list-group-item chat-user" data-user-id="@user.Id" data-user-name="@user.FirstName @user.LastName">
                                <div class="d-flex align-items-center">
                                    <div class="chat-avatar">
                                        @{
                                            string photoUrl = null;
                                            string username = user.UserName?.ToLower().Replace(" ", "");

                                            // Check if this user has a specific photo
                                            if (ViewBag.VolunteerPhotos != null && username != null &&
                                            ViewBag.VolunteerPhotos.ContainsKey(username))
                                            {
                                                photoUrl = ViewBag.VolunteerPhotos[username];
                                            }
                                        }

                                        @if (!string.IsNullOrEmpty(photoUrl))
                                        {
                                            <img src="@photoUrl" alt="@user.FirstName @user.LastName" class="img-fluid rounded-circle"
                                                 style="width: 40px; height: 40px; object-fit: cover;"
                                                 data-photo-url="@photoUrl" />
                                        }
                                        else
                                        {
                                            <i class="bi bi-person-circle fs-4"></i>
                                        }
                                    </div>
                                    <div class="ms-3">
                                        <div class="fw-bold">@user.FirstName @user.LastName</div>
                                        <small class="text-muted">
                                            @(User.IsInRole("User") ? "Volunteer" : "User")
                                        </small>
                                    </div>
                                </div>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
        <div class="col-md-9">
            <div class="card">
                <div class="card-header bg-primary text-white d-flex justify-content-between align-items-center">
                    <h5 class="mb-0" id="chatTitle">Chat Support</h5>
                    <span id="chatStatus" class="badge bg-success">Connected</span>
                </div>
                <div class="card-body">
                    <div class="chat-messages" id="messagesList">
                        <div class="text-center text-muted my-4">
                            <p>Select a chat partner or group to begin a conversation.</p>
                        </div>
                    </div>
                </div>
                <div class="card-footer">
                    <form id="messageForm" class="d-flex">
                        <input type="hidden" id="receiverId" />
                        <input type="text" id="messageInput" class="form-control" placeholder="Type your message..." autocomplete="off" />
                        <button type="submit" class="btn btn-primary ms-2">
                            <i class="bi bi-send"></i>
                        </button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Create Group Modal -->
<div class="modal fade" id="createGroupModal" tabindex="-1" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Create Support Group</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="groupNameInput" class="form-label">Group Name</label>
                    <input type="text" class="form-control" id="groupNameInput" placeholder="E.g., Single Parents Dublin">
                </div>
                <div class="mb-3">
                    <label for="groupDescriptionInput" class="form-label">Description</label>
                    <textarea class="form-control" id="groupDescriptionInput" rows="3"
                              placeholder="Describe what this group is about..."></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-primary" id="confirmCreateGroupBtn">Create Group</button>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <style>
        .chat-messages {
            height: 400px;
            overflow-y: auto;
            padding: 10px;
        }

        .message {
            margin-bottom: 15px;
            padding: 10px 15px;
            border-radius: 10px;
            max-width: 80%;
            position: relative;
        }

        .message-received {
            background-color: #f1f0f0;
            align-self: flex-start;
            float: left;
            clear: both;
        }

        .message-sent {
            background-color: #dcf8c6;
            align-self: flex-end;
            float: right;
            clear: both;
        }

        .message-info {
            font-size: 0.8rem;
            color: #666;
            margin-bottom: 5px;
        }

        .message-role {
            font-size: 0.7rem;
            padding: 2px 5px;
            border-radius: 3px;
            margin-left: 5px;
        }

        .role-User {
            background-color: #e6f7ff;
            color: #0066cc;
        }

        .role-Volunteer {
            background-color: #f0f7e6;
            color: #5cb85c;
        }

        .role-Admin {
            background-color: #fff0f0;
            color: #d9534f;
        }

        .chat-user, .chat-group {
            cursor: pointer;
            transition: background-color 0.2s;
        }

            .chat-user:hover, .chat-group:hover {
                background-color: #f8f9fa;
            }

            .chat-user.active, .chat-group.active {
                background-color: #e9ecef;
            }

        .chat-avatar {
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
            background-color: #e9ecef;
            border-radius: 50%;
            overflow: hidden;
        }

        .message-avatar {
            width: 30px;
            height: 30px;
            border-radius: 50%;
            overflow: hidden;
            margin-right: 10px;
            float: left;
        }

            .message-avatar img {
                width: 100%;
                height: 100%;
                object-fit: cover;
            }
    </style>
}

@section Scripts {
    <script src="~/lib/signalr/dist/browser/signalr.min.js"></script>
    <script src="~/js/chat.js"></script>
}
